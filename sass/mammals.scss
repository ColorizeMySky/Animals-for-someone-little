* {
	user-select: none;
}

$iconWidth: 100px;
$mammals: bear, boar, camel, cat, cow, deer, dog, donkey,
		  elephant, elk, fox, giraffe, goat, hamster, hedgehog, hippo,
		  horse, hyena, kangaroo, lion, monkey, mouse, panda, porcupine,
		  rabbit, racoon, rhinoceros, sheep, squirrel, tiger, wolf, zebra;
$positionY: boar, camel, cow, deer, elk, giraffe, goat, horse, hyena, mouse, panda, sheep, tiger, zebra;
$boxShadow: 0 3px 6px rgba(0, 0, 0, 0.16),
    		0 3px 6px rgba(0, 0, 0, 0.23);
$colorGradient: hsla(50, 70%, 90%, 1);

@mixin text {
	font: {
		family: "Avant Garde", Avantgarde, "Century Gothic", CenturyGothic, "AppleGothic", sans-serif;
	}
	text: {
		align: center;
		transform: uppercase;	
    	shadow: 2px 2px 0px #fff,
    			4px 4px 0px rgba(0, 0, 0, 0.2);
   	}
   	color: #131313;
}
@mixin flexColumn {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: stretch;	
}

#icons, #images {
	display: flex;
	flex-wrap: wrap;
	justify-content: space-around;
}
p {
	margin: 0;
}
.guessed {
	border: 1px solid rgba(0, 0, 0, 0.5);
}
.unclickable {
	pointer-events: none;
}

.icon {
	width: 100px;
	height: 100px;
	overflow: hidden;
	margin: 8px 18px;
	background-image: url('../img/icons.jpg');
	background-repeat: no-repeat;
	filter: grayscale(0.8);
	transform: scale(0.8);

	&:hover {
		filter: grayscale(0);
		transition-duration: 0.5s;
	}	
	&.selected, &.guessed {
		transform: scale(1);
		filter: grayscale(0);
	}
}

.image {
	@include text;
	@include flexColumn;
	width: 250px;
	height: 100px;
	margin-top: 15px;
    box-sizing: border-box;
	font-size: 35px;
    transition-duration: 0.5s;

    @mixin animation {
	    animation: gradientBackground 3s infinite; /* animation-name animation-duration animation-timing-function animadelay animation-iteration-count animation-direction; */
	    opacity: 0.5;
	}
	@mixin littleText {
		flex-direction: row;
		justify-content: flex-end;
		align-items: flex-end;
		font-size: 20px;
		padding-right: 15px;
	    padding-bottom: 5px;
	}
	
	&:hover:not(.guessed) {
		@include animation;
	}
	&.selected {
		@include animation;
		@include littleText;
	}
	&.guessed{
		@include littleText;
		background-repeat: no-repeat;
		background-position: center;
	}
}

@each $animal in $mammals{
  	#images .guessed.#{$animal} {
    	background-image: url('../img/#{$animal}.jpg');
	}

	$i: index($mammals, $animal);
	.icon.#{$animal} {
		background-image: url('../img/icons.jpg');
    	background-position: (-100px*$i)+100px 0;
	}
}
@each $img in $positionY {
	#images .guessed.#{$img} {
		background-position-y: 0;
	}
}

#messages {
	@include flexColumn;
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	pointer-events: none;

	&.showMessage {
		@include text;
		background-color: rgba(255, 255, 255, 0.5);
		
		p {
			font-size: 10vw;
		}
	}
	&.showLastMessage {
		pointer-events: auto;
	}
}


button {
	@include text;
	width: 50%;
    margin: 0 auto;
    font-size: 5vw;
    border-radius: 20px;
    animation: gradientBackground 3s infinite;
    cursor: pointer;
	
	&:focus {
		outline: 0;
	}
}

@keyframes gradientBackground {
	0% {
		background-color: $colorGradient;
   	 	box-shadow: 0 -100px 100px -50px adjust-hue($colorGradient, 180deg) inset,
   	 				$boxShadow;
	}
	20% {
		background-color: adjust-hue($colorGradient, 72deg);
   	 	box-shadow: 0 -100px 100px -50px adjust-hue($colorGradient, 252deg) inset,
   	 				$boxShadow;
	}
	40% {
		background-color: adjust-hue($colorGradient, 144deg);
   	 	box-shadow: 0 -100px 100px -50px adjust-hue($colorGradient, 324deg) inset,
   	 				$boxShadow;
	}
	60% {
		background-color: adjust-hue($colorGradient, 216deg);
   	 	box-shadow: 0 -100px 100px -50px adjust-hue($colorGradient, 36deg) inset,
   	 				$boxShadow;
	}
	80% {
		background-color: adjust-hue($colorGradient, 288deg);
   	 	box-shadow: 0 -100px 100px -50px adjust-hue($colorGradient, 108deg) inset,
   	 				$boxShadow;	
   	}
	100% {
		background-color: $colorGradient;
   	 	box-shadow: 0 -100px 100px -50px adjust-hue($colorGradient, 180deg) inset,
   	 				$boxShadow;
	}
}